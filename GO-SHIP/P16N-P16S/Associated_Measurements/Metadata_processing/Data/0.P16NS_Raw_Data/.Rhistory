## SF_Taxa
dp_taxa <- ggplot(df.melt[df.melt$Seaweed=="DP",], aes(x=factor(Day, levels = c("0","8","10","14")), y=value, fill = plot_fill))+
geom_bar(stat = "identity")+
xlab("Days of Decay")+
ylab("% Relative Abundance ")+
ggtitle("Dictyopteris")
dp_taxa
df.melt[df.melt$Seaweed=="AT",]
at_taxa <- ggplot(df.melt[df.melt$Seaweed=="AT",], aes(x=factor(Day, levels = c("0","5","12","15","18")), y=value, fill = plot_fill))+
geom_bar(stat = "identity")+
xlab("Days of Decay")+
ylab("% Relative Abundance ")+
ggtitle("A. taxiformis")
at_taxa
## G2
## 1)
Species <- bc.NMDS_xy$Species
anosim(bray_dist, Species)
adonis2(bray_dist~Species)
p
## suggest 5 clusters:
## Cluster 1 - N=3, SF8, SN20Rep2, SN20Rep1,
## Cluster 2 - N=3, SF6, SN6, SF12
## Cluster 3 - N=2, SF20, SN8
## Cluster 4 - N=1, SN0
## Cluster 5 - N=4, SF3, SF0, SN3, SNZ3
## 10) Merge bc.nmds_xy with metadata
metadata <- read.csv("/Users/yubinraut/Documents/Benthic_BNF/Data/20230527_Sample_Metadata.csv")
bc.NMDS_xy$Species <- metadata$Species[match(bc.NMDS_xy$Sample, metadata$Sample)]
bc.NMDS_xy$Day <- metadata$Day[match(bc.NMDS_xy$Sample, metadata$Sample)]
bc.NMDS_xy$Cluster <- metadata$Cluster_Bray[match(bc.NMDS_xy$Sample, metadata$Sample)]
bc.NMDS_xy$Stage <- metadata$Stage[match(bc.NMDS_xy$Sample, metadata$Sample)]
Stage <- bc.NMDS_xy$Stage
anosim(bray_dist, Stage)
adonis2(bray_dist~Stage)
## G1
## 1) Input files = .csv version of tabs "P16S_2005" and "P16N_2006"
## from the "CLIVAR_DNALOG_CARLSON2019.xlsx" file from Carlson Lab
## P16S tab excludes Station 09
input.file1 <- "/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/P16NS/Source_Files/P16NS_Carlson_Lab/20221104_P16S_Raw_DNA_ID.csv"
df.s <- read.csv(input.file1)
## Subset P16S with relevant overlapping columns
df.s <- df.s[,c("DNA_ID","CRUISE","STATION","NISKIN",
"Latitude..degrees_north.","Longitude..degrees_east.",
"CTDPRS..DBAR.")]
colnames(df.s) <- c("DNA_ID", "Cruise", "Station", "Niskin",
"Latitude_degrees_N","Longitude_degrees_E",
"CTD_Pressue_dbar")
View(df.s)
## P16N tab excludes Station 02
input.file2 <- "/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/P16NS/Source_Files/P16NS_Carlson_Lab/20221104_P16N_Raw_DNA_ID.csv"
df.n <- read.csv(input.file2)
## Subset P16N with relevant overlapping columns
df.n <- df.n[,c("DNA_ID","CRUISE","STATION","NISKIN",
"Latitude..degrees_north.","Longitude..degrees_east.",
"CTDPRS.DBARS.")]
colnames(df.n) <- c("DNA_ID", "Cruise", "Station", "Niskin",
"Latitude_degrees_N","Longitude_degrees_E",
"CTD_Pressue_dbar")
## 2) Merge the P16 S and N transects
p16sn.raw <- rbind(df.s,df.n)
## 3) Per the notes on "SAMPLE SUMMARY" tab on the raw .xlsx file, all samples
## were taken from Trace Metals Cast so add that as cast type column
p16sn.raw$Cast_Type <- "Trace_Metal"
View(p16sn.raw)
## 4) Merged P16 S and N trace metal cast CTD data downloaded from BCO-DMO
## http://data.bco-dmo.org/jg/info/BCO/CLIVAR_AEROSOL/P16_Trace_Metal_Profiles%7Bdir=data.bco-dmo.org/jg/dir/BCO/CLIVAR_AEROSOL/,data=data.bco-dmo.org:80/jg/serv/BCO/CLIVAR_AEROSOL/P16_trace_metal_profiles.html0%7D?
input.file3 <- "/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/P16NS/Source_Files/P16NS_CTD_Casts/P16NS_Tracemetal_Cast_BCO_DMO.csv"
df.tm.raw <- read.csv(input.file3)
## 5) Concatenate Cruise, Station, and Niskin analogous columns to produce DNA_ID
## Cruise
df.tm.raw$Cruise <- sub("^([^_]*)_([^_]*).*", "\\1", df.tm.raw$EXPOCODE)
View(df.tm.raw)
## Station - make sure to add leading zeroes so it's two digits
## so it matches existing DNA_ID
df.tm.raw$Station <- paste("S",sprintf("%02d", df.tm.raw$STNNBR), sep = "")
## Niskin - assuming analogous column in trace metal CTD cast is "SAMPNO"
df.tm.raw$Niskin <- paste("N",sprintf("%02d",df.tm.raw$SAMPNO), sep = "")
## Concatenate
df.tm.raw$DNA_ID <- paste(df.tm.raw$Cruise, df.tm.raw$Station,
df.tm.raw$Niskin, sep = "-")
View(p16sn.raw)
## 6) Add CTD pressure from trace metal casts
p16sn.raw$TM_Pressure <- df.tm.raw$CTDPRS[match(p16sn.raw$DNA_ID,
df.tm.raw$DNA_ID)]
View(p16sn.raw)
## 7) If NAs exist, replace with constant of -100
p16sn.raw$TM_Pressure <- ifelse(is.na(p16sn.raw$TM_Pressure), -100,
p16sn.raw$TM_Pressure)
## 8) Calculate absolute difference between the two pressures
p16sn.raw$Difference <- abs(p16sn.raw$CTD_Pressue_dbar-p16sn.raw$TM_Pressure)
## 9) Compare the pressure reported for each sample with unique DNA_ID with
## corresponding pressure from the associated trace metal cast
## Plot
library(ggplot2)
p1 <- ggplot()+
geom_point(data = p16sn.raw, aes(x = CTD_Pressue_dbar, y = TM_Pressure,
color = Cruise))+
geom_point(data = p16sn.raw[p16sn.raw$Difference > 10,],
aes(x = CTD_Pressue_dbar, y = TM_Pressure), shape = 1,
size = 3)+
geom_text(data = p16sn.raw[p16sn.raw$Difference > 10,],
aes(x = CTD_Pressue_dbar, y = TM_Pressure,
label = DNA_ID), hjust = 0.5, vjust = -1)+
theme_minimal()
p1
## G2
## All the problem stations where discrepancies occur are along the P16S transect
## Problem cluster 1: At fixed pressure -100 along y-axis (TM_Pressure)
## This suggests that these samples did not in fact come from the trace metal
## 1) Identify the range of Niskin numbers from problem cluster 1
range(p16sn.raw$Niskin[p16sn.raw$Difference > 10]) ## 8 - 36
## 2) Identify the range of Niskin numbers from TM casts
range(df.tm.raw$Niskin) ## N01 - N15
## Since the Niskin numbers range from 8 - 36, we can definitively conclude
## that they could not have all come trace metal casts, which range from 1 -15
## 3) P16S regular casts CTD data: National Centers for Environmental Information
input.file4 <- c("/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/P16NS/Source_Files/P16NS_CTD_Casts/P16S_Easier_to_navigate_YR_20211025_NCEI_NOAA.csv")
p16s.reg.raw <- read.csv(input.file4)
## 4) Concatenate Cruise, Station, and Niskin analogous columns to produce DNA_ID
## Cruise - make sure to trim leading whitespace
p16s.reg.raw$Cruise <- trimws(p16s.reg.raw$SECT_ID, "l")
## Station - make sure to add leading zeroes so it's two digits
## so it matches existing DNA_ID
p16s.reg.raw$Station <- paste("S",sprintf("%02d", p16s.reg.raw$STNNBR), sep = "")
## Niskin - assuming analogous column in regular CTD cast is "SAMPNO" or "BTLNBR"
p16s.reg.raw$Niskin <- paste("N",sprintf("%02d",p16s.reg.raw$SAMPNO), sep = "")
## Concatenate
p16s.reg.raw$DNA_ID <- paste(p16s.reg.raw$Cruise, p16s.reg.raw$Station,
p16s.reg.raw$Niskin, sep = "-")
## 5) Add CTD pressure from regular casts
p16sn.raw$Reg_Pressure <- p16s.reg.raw$CTDPRS[match(p16sn.raw$DNA_ID,
p16s.reg.raw$DNA_ID)]
## 6) Create new pressure column that's a combination of TM and Reg casts
p16sn.raw$TM_Reg_Pressure <- ifelse(p16sn.raw$TM_Pressure == -100,
p16sn.raw$Reg_Pressure,
p16sn.raw$TM_Pressure)
p16sn.raw$Cast_Type <- ifelse(p16sn.raw$TM_Pressure == -100,
"Regular_Cast", p16sn.raw$Cast_Type)
## 7) Calculate new absolute difference between the original pressure and
## pressure derived from either TM or Reg CTD cast
p16sn.raw$Difference2 <- abs(p16sn.raw$CTD_Pressue_dbar-p16sn.raw$TM_Reg_Pressure)
## 8) Compare the pressure reported for each sample with unique DNA_ID with
## corresponding pressure from the associated TM or reg cast
p2 <- ggplot()+
geom_point(data = p16sn.raw, aes(x = CTD_Pressue_dbar, y = TM_Reg_Pressure,
color = Cruise))+
geom_point(data = p16sn.raw[p16sn.raw$Difference2 > 10,],
aes(x = CTD_Pressue_dbar, y = TM_Reg_Pressure), shape = 1,
size = 3)+
geom_text(data = p16sn.raw[p16sn.raw$Difference2 > 10,],
aes(x = CTD_Pressue_dbar, y = TM_Reg_Pressure,
label = DNA_ID), hjust = 0.5, vjust = -1)+
theme_minimal()
p2
## Problem cluster 2: remnant problem samples from S47 which are from TM cast
p16s.47 <- p16sn.raw[p16sn.raw$Cruise=="P16S"&p16sn.raw$Station==47,]
p16s.47.raw <- df.tm.raw[df.tm.raw$Cruise=="P16S"&df.tm.raw$Station=="S47",
c("DNA_ID","CTDPRS")]
## Add the recorded pressures to compare more easily
p16s.47.raw$Manual_Record_Pressure <- p16s.47$CTD_Pressue_dbar[
match(p16s.47.raw$DNA_ID, p16s.47$DNA_ID )]
## In this situation, we weren't sure whether the recorded DNA_IDs (Niskin #)
## or the recorded pressures were correct.
## JM/YR - plot [DNA] to figure out that their recorded pressures are correct
## 9) Plot DNA depth profiles for P16S-S47
input.file5 <- "/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/P16NS/Source_Files/P16NS_DNA_Concentration/221116_P16N-S_DNA_concentrations_for_CMAP.tsv"
dna <- read.csv(input.file5, sep = "\t", header = T)
dna$Sect_ID <- trimws(dna$Sect_ID, "l")
View(dna)
View(dna)
View(dna)
dna$Sect_ID <- trimws(dna$Original_SampleID, "l")
View(dna)
dna <- read.csv(input.file5, sep = "\t", header = T)
dna.16s47 <- dna[grepl("P16S-S47", dna$Original_SampleID),]
View(dna.16s47)
View(p16s.47.raw)
View(p16s.47)
View(p16s.47.raw)
dna.16s47$Manual_Recorded_Pressure <- p16s.47.raw$Manual_Record_Pressure[
match(dna.16s47$Original_SampleID, p16s.47.raw$DNA_ID)]
View(dna.16s47)
View(dna.16s47)
p3 <- ggplot(data = dna.16s47, aes(x = DNA_extract_conc_ng.µL, y = Manual_Recorded_Pressure))+
geom_point()+
geom_line(orientation = "y")+
scale_y_reverse()+
theme_minimal()
p3
colnames(dna.16s47)
p3 <- ggplot(data = dna.16s47, aes(x = DNA.extract.concentration..ng.µL., y = Manual_Recorded_Pressure))+
geom_point()+
geom_line(orientation = "y")+
scale_y_reverse()+
theme_minimal()
p3
View(dna.16s47)
View(p16sn.raw)
View(p16s.47.raw)
View(p16s.47)
View(p16sn.raw)
View(p16s.47)
View(p16s.47.raw)
View(dna.16s47)
remove(input.file5)
remove(dna)
remove(dna.16s47)
remove(p3)
View(p16s.47.raw)
# p3.1
## If you put the CTD pressures for the correct DNA_ID
## the plot follows a Martin curve distribution.
## Conclusion for P16S-S47: the manual recorded target pressures are reliable
## and what's incorrect is their recorded Niskin IDs.
## P16S-S47-N14 should be called P16S-S47-N08
## P16S-S47-N08 should be called P16S-S47-N14
## P16S-S47-N15 should be called P16S-S47-N05
## JM will change these DNA_IDs to accurately reflect the confirmed changes.
## 11) Manually change it here
p16sn.raw$DNA_ID_Confirmed <- p16sn.raw$DNA_ID
p16sn.raw$DNA_ID_Confirmed <- ifelse(p16sn.raw$DNA_ID=="P16S-S47-N14",
"P16S-S47-N08", p16sn.raw$DNA_ID_Confirmed)
p16sn.raw$DNA_ID_Confirmed <- ifelse(p16sn.raw$DNA_ID=="P16S-S47-N08",
"P16S-S47-N14", p16sn.raw$DNA_ID_Confirmed)
p16sn.raw$DNA_ID_Confirmed <- ifelse(p16sn.raw$DNA_ID=="P16S-S47-N15",
"P16S-S47-N05", p16sn.raw$DNA_ID_Confirmed)
View(p16sn.raw)
## Problem cluster 3: newly identified samples from S84 which are
## from Reg CTD cast
p16s.84 <- p16sn.raw[p16sn.raw$Cruise=="P16S"&p16sn.raw$Station==84,]
p16s.84.raw <- p16s.reg.raw[p16s.reg.raw$Station=="S84",
c("DNA_ID","CTDPRS")]
p16s.84.raw$Manual_Record_Pressure <- p16s.84$CTD_Pressue_dbar[
match(p16s.84.raw$DNA_ID, p16s.84$DNA_ID )]
## I think another case of incorrect DNA_IDs so if we correct the
## Niskin numbers based off the recorded target pressures, we will have a much
## better fit between recorded pressures and CTD pressure from corresponding
## regular CTD cast data. It looks like a simple row transposition error
## N27 --> N26, N26 --> N25, N24 --> N23, N22 --> N21, N20 --> N19
## 12) Manually change the DNA_IDs
p16sn.raw$DNA_ID_Confirmed <- ifelse(p16sn.raw$DNA_ID=="P16S-S84-N27",
"P16S-S84-N26", p16sn.raw$DNA_ID_Confirmed)
p16sn.raw$DNA_ID_Confirmed <- ifelse(p16sn.raw$DNA_ID=="P16S-S84-N26",
"P16S-S84-N25", p16sn.raw$DNA_ID_Confirmed)
p16sn.raw$DNA_ID_Confirmed <- ifelse(p16sn.raw$DNA_ID=="P16S-S84-N24",
"P16S-S84-N23", p16sn.raw$DNA_ID_Confirmed)
p16sn.raw$DNA_ID_Confirmed <- ifelse(p16sn.raw$DNA_ID=="P16S-S84-N22",
"P16S-S84-N21", p16sn.raw$DNA_ID_Confirmed)
p16sn.raw$DNA_ID_Confirmed <- ifelse(p16sn.raw$DNA_ID=="P16S-S84-N20",
"P16S-S84-N19", p16sn.raw$DNA_ID_Confirmed)
## G3
## 1) Subset p16sn.raw
p16ns.curate <- p16sn.raw[,c("DNA_ID","DNA_ID_Confirmed", "Cast_Type")]
View(p16ns.curate)
View(p16ns.curate)
## 2) Save output file
colnames(p16ns.curate) <- c("Original_DNA_ID", "Corrected_DNA_ID", "Cast_Type")
output.file <- c("/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/P16NS/Data/0.P16NS_Raw_Data/")
setwd(output.file)
write.csv(p16ns.curate, file = "1.20230530_P16NS_Confirmed_DNA_ID_Cast_Type.csv", row.names = F)
## G1
## 1) Input files = corrected DNA ID and cast type file
input.file1 <- "/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/P16NS/Data/0.P16NS_Raw_Data/1.20230530_P16NS_Confirmed_DNA_ID_Cast_Type.csv"
dna.id <- read.csv(input.file1)
## 2) Subset by TM and reg casts
df.tm <- dna.id[dna.id$Cast_Type=="Trace_Metal",]
df.reg <- dna.id[dna.id$Cast_Type=="Regular_Cast",]
## 3) Merged P16 S and N trace metal cast CTD data downloaded from BCO-DMO
## http://data.bco-dmo.org/jg/info/BCO/CLIVAR_AEROSOL/P16_Trace_Metal_Profiles%7Bdir=data.bco-dmo.org/jg/dir/BCO/CLIVAR_AEROSOL/,data=data.bco-dmo.org:80/jg/serv/BCO/CLIVAR_AEROSOL/P16_trace_metal_profiles.html0%7D?
input.file2 <- "/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/P16NS/Source_Files/P16NS_CTD_Casts/P16NS_Tracemetal_Cast_BCO_DMO.csv"
df.tm.raw <- read.csv(input.file2)
## 4) Concatenate Cruise, Station, and Niskin analogous columns to produce DNA_ID
## Cruise
df.tm.raw$Cruise <- sub("^([^_]*)_([^_]*).*", "\\1", df.tm.raw$EXPOCODE)
## Station - make sure to add leading zeroes so it's two digits
## so it matches existing DNA_ID
df.tm.raw$Station <- paste("S",sprintf("%02d", df.tm.raw$STNNBR), sep = "")
## Niskin - assuming analogous column in trace metal CTD cast is "SAMPNO"
df.tm.raw$Niskin <- paste("N",sprintf("%02d",df.tm.raw$SAMPNO), sep = "")
## Concatenate
df.tm.raw$DNA_ID <- paste(df.tm.raw$Cruise, df.tm.raw$Station,
df.tm.raw$Niskin, sep = "-")
## 5) Subset TM CTD casts by corrected DNA_ID
## list of columns to merge from CTD data
tm.raw.cols <- c("DNA_ID","Cruise","Station","Niskin","latitude","longitude",
"CTDPRS","TEMPERATURE","SALNTY","OXYGEN","PHSPHT",
"SILCAT","NITRAT","NITRIT")
df.tm.merged <- merge(x = df.tm[,c("Corrected_DNA_ID","Cast_Type")],
y = df.tm.raw[,tm.raw.cols], by.x = "Corrected_DNA_ID",
by.y = "DNA_ID")
View(df.tm.merged)
## 3) P16S regular casts CTD data: National Centers for Environmental Information - NOAA
## https://www.ncei.noaa.gov/access/ocean-carbon-acidification-data-system/oceans/ndp_090/
input.file3 <- c("/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/P16NS/Source_Files/P16NS_CTD_Casts/P16S_Easier_to_navigate_YR_20211025_NCEI_NOAA.csv")
p16s.reg.raw <- read.csv(input.file3)
## 7) Concatenate Cruise, Station, and Niskin analogous columns to produce DNA_ID
## Cruise - make sure to trim leading whitespace
p16s.reg.raw$Cruise <- trimws(p16s.reg.raw$SECT_ID, "l")
## Station - make sure to add leading zeroes so it's two digits
## so it matches existing DNA_ID
p16s.reg.raw$Station <- paste("S",sprintf("%02d", p16s.reg.raw$STNNBR), sep = "")
## Niskin - assuming analogous column in regular CTD cast is "SAMPNO" or "BTLNBR"
p16s.reg.raw$Niskin <- paste("N",sprintf("%02d",p16s.reg.raw$SAMPNO), sep = "")
## Concatenate
p16s.reg.raw$DNA_ID <- paste(p16s.reg.raw$Cruise, p16s.reg.raw$Station,
p16s.reg.raw$Niskin, sep = "-")
## 8) Subset reg CTD casts by corrected DNA_ID
## list of columns to merge from CTD data
reg.raw.cols <- c("DNA_ID","Cruise","Station","Niskin","LATITUDE","LONGITUDE",
"CTDPRS","CTDTMP","SALNTY","OXYGEN","PHSPHT",
"SILCAT","NITRAT","NITRIT")
df.reg.merged <- merge(x = df.reg[,c("Corrected_DNA_ID", "Cast_Type")],
y = p16s.reg.raw[,reg.raw.cols], by.x = "Corrected_DNA_ID",
by.y = "DNA_ID")
## 9 Homogenize the colnames to merge into one df
colnames(df.tm.merged) <- c("DNA_ID","Cast_Type",
"Cruise","Station","Niskin","Latitude","Longitude",
"Pressure","Temperature","Salinity","Oxygen",
"Phosphate","Silicate","Nitrate","Nitrite")
colnames(df.reg.merged) <- c("DNA_ID","Cast_Type",
"Cruise","Station","Niskin","Latitude","Longitude",
"Pressure","Temperature","Salinity","Oxygen",
"Phosphate","Silicate","Nitrate","Nitrite")
p16ns.metadata <- rbind(df.tm.merged, df.reg.merged)
View(p16ns.metadata)
df.tm.merged <- merge(x = df.tm[,c("Original_DNA_ID","Corrected_DNA_ID","Cast_Type")],
y = df.tm.raw[,tm.raw.cols], by.x = "Corrected_DNA_ID",
by.y = "DNA_ID")
df.reg.merged <- merge(x = df.reg[,c("Original_DNA_ID","Corrected_DNA_ID", "Cast_Type")],
y = p16s.reg.raw[,reg.raw.cols], by.x = "Corrected_DNA_ID",
by.y = "DNA_ID")
View(df.reg.merged)
View(df.tm.merged)
## 9 Homogenize the colnames to merge into one df
colnames(df.tm.merged) <- c("Corrected_DNA_ID","Original_DNA_ID","Cast_Type",
"Cruise","Station","Niskin","Latitude","Longitude",
"Pressure","Temperature","Salinity","Oxygen",
"Phosphate","Silicate","Nitrate","Nitrite")
colnames(df.reg.merged) <- c("DNA_ID","Cast_Type",
"Cruise","Station","Niskin","Latitude","Longitude",
"Pressure","Temperature","Salinity","Oxygen",
"Phosphate","Silicate","Nitrate","Nitrite")
p16ns.metadata <- rbind(df.tm.merged, df.reg.merged)
## 9 Homogenize the colnames to merge into one df
colnames(df.tm.merged) <- c("Corrected_DNA_ID","Original_DNA_ID","Cast_Type",
"Cruise","Station","Niskin","Latitude","Longitude",
"Pressure","Temperature","Salinity","Oxygen",
"Phosphate","Silicate","Nitrate","Nitrite")
colnames(df.reg.merged) <- c("DNA_ID","Cast_Type",
"Cruise","Station","Niskin","Latitude","Longitude",
"Pressure","Temperature","Salinity","Oxygen",
"Phosphate","Silicate","Nitrate","Nitrite")
df.tm.merged <- merge(x = df.tm[,c("Original_DNA_ID","Corrected_DNA_ID","Cast_Type")],
y = df.tm.raw[,tm.raw.cols], by.x = "Corrected_DNA_ID",
by.y = "DNA_ID")
df.reg.merged <- merge(x = df.reg[,c("Original_DNA_ID","Corrected_DNA_ID", "Cast_Type")],
y = p16s.reg.raw[,reg.raw.cols], by.x = "Corrected_DNA_ID",
by.y = "DNA_ID")
View(df.tm.merged)
## 9 Homogenize the colnames to merge into one df
colnames(df.tm.merged) <- c("Corrected_DNA_ID","Original_DNA_ID","Cast_Type",
"Cruise","Station","Niskin","Latitude","Longitude",
"Pressure","Temperature","Salinity","Oxygen",
"Phosphate","Silicate","Nitrate","Nitrite")
colnames(df.reg.merged) <- c("DNA_ID","Cast_Type",
"Cruise","Station","Niskin","Latitude","Longitude",
"Pressure","Temperature","Salinity","Oxygen",
"Phosphate","Silicate","Nitrate","Nitrite")
p16ns.metadata <- rbind(df.tm.merged, df.reg.merged)
remove(p16ns.metadata)
p16ns.metadata <- rbind(df.tm.merged, df.reg.merged)
colnames(df.reg.merged) <- c("Corrected_DNA_ID","Original_DNA_ID","Cast_Type",
"Cruise","Station","Niskin","Latitude","Longitude",
"Pressure","Temperature","Salinity","Oxygen",
"Phosphate","Silicate","Nitrate","Nitrite")
p16ns.metadata <- rbind(df.tm.merged, df.reg.merged)
View(p16ns.metadata)
## G1
## 1) Input files = corrected DNA ID and cast type file
input.file1 <- "/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/P16NS/Data/0.P16NS_Raw_Data/1.20230530_P16NS_Confirmed_DNA_ID_Cast_Type.csv"
dna.id <- read.csv(input.file1)
## 2) Subset by TM and reg casts
df.tm <- dna.id[dna.id$Cast_Type=="Trace_Metal",]
df.reg <- dna.id[dna.id$Cast_Type=="Regular_Cast",]
## 3) Merged P16 S and N trace metal cast CTD data downloaded from BCO-DMO
## http://data.bco-dmo.org/jg/info/BCO/CLIVAR_AEROSOL/P16_Trace_Metal_Profiles%7Bdir=data.bco-dmo.org/jg/dir/BCO/CLIVAR_AEROSOL/,data=data.bco-dmo.org:80/jg/serv/BCO/CLIVAR_AEROSOL/P16_trace_metal_profiles.html0%7D?
input.file2 <- "/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/P16NS/Source_Files/P16NS_CTD_Casts/P16NS_Tracemetal_Cast_BCO_DMO.csv"
df.tm.raw <- read.csv(input.file2)
## 4) Concatenate Cruise, Station, and Niskin analogous columns to produce DNA_ID
## Cruise
df.tm.raw$Cruise <- sub("^([^_]*)_([^_]*).*", "\\1", df.tm.raw$EXPOCODE)
## Station - make sure to add leading zeroes so it's two digits
## so it matches existing DNA_ID
df.tm.raw$Station <- paste("S",sprintf("%02d", df.tm.raw$STNNBR), sep = "")
## Niskin - assuming analogous column in trace metal CTD cast is "SAMPNO"
df.tm.raw$Niskin <- paste("N",sprintf("%02d",df.tm.raw$SAMPNO), sep = "")
## Concatenate
df.tm.raw$DNA_ID <- paste(df.tm.raw$Cruise, df.tm.raw$Station,
df.tm.raw$Niskin, sep = "-")
View(df.tm.raw)
## 5) Subset TM CTD casts by corrected DNA_ID
## list of columns to merge from CTD data
tm.raw.cols <- c("DNA_ID","Cruise","Station","Niskin","latitude","longitude",
"DATE","CTDPRS","TEMPERATURE","SALNTY","OXYGEN","PHSPHT",
"SILCAT","NITRAT","NITRIT")
df.tm.merged <- merge(x = df.tm[,c("Original_DNA_ID","Corrected_DNA_ID","Cast_Type")],
y = df.tm.raw[,tm.raw.cols], by.x = "Corrected_DNA_ID",
by.y = "DNA_ID")
View(df.tm.merged)
## 3) P16S regular casts CTD data: National Centers for Environmental Information - NOAA
## https://www.ncei.noaa.gov/access/ocean-carbon-acidification-data-system/oceans/ndp_090/
input.file3 <- c("/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/P16NS/Source_Files/P16NS_CTD_Casts/P16S_Easier_to_navigate_YR_20211025_NCEI_NOAA.csv")
p16s.reg.raw <- read.csv(input.file3)
## 7) Concatenate Cruise, Station, and Niskin analogous columns to produce DNA_ID
## Cruise - make sure to trim leading whitespace
p16s.reg.raw$Cruise <- trimws(p16s.reg.raw$SECT_ID, "l")
## Station - make sure to add leading zeroes so it's two digits
## so it matches existing DNA_ID
p16s.reg.raw$Station <- paste("S",sprintf("%02d", p16s.reg.raw$STNNBR), sep = "")
## Niskin - assuming analogous column in regular CTD cast is "SAMPNO" or "BTLNBR"
p16s.reg.raw$Niskin <- paste("N",sprintf("%02d",p16s.reg.raw$SAMPNO), sep = "")
## Concatenate
p16s.reg.raw$DNA_ID <- paste(p16s.reg.raw$Cruise, p16s.reg.raw$Station,
p16s.reg.raw$Niskin, sep = "-")
View(p16s.reg.raw)
## 8) Subset reg CTD casts by corrected DNA_ID
## list of columns to merge from CTD data
reg.raw.cols <- c("DNA_ID","Cruise","Station","Niskin","LATITUDE","LONGITUDE",
"DATE","CTDPRS","CTDTMP","SALNTY","OXYGEN","PHSPHT",
"SILCAT","NITRAT","NITRIT")
df.reg.merged <- merge(x = df.reg[,c("Original_DNA_ID","Corrected_DNA_ID", "Cast_Type")],
y = p16s.reg.raw[,reg.raw.cols], by.x = "Corrected_DNA_ID",
by.y = "DNA_ID")
## 9 Homogenize the colnames to merge into one df
colnames(df.tm.merged) <- c("Corrected_DNA_ID","Original_DNA_ID","Cast_Type",
"Cruise","Station","Niskin","Latitude","Longitude",
"Date","Pressure","Temperature","Salinity","Oxygen",
"Phosphate","Silicate","Nitrate","Nitrite")
colnames(df.reg.merged) <- c("Corrected_DNA_ID","Original_DNA_ID","Cast_Type",
"Cruise","Station","Niskin","Latitude","Longitude",
"Date","Pressure","Temperature","Salinity","Oxygen",
"Phosphate","Silicate","Nitrate","Nitrite")
p16ns.metadata <- rbind(df.tm.merged, df.reg.merged)
View(p16ns.metadata)
##G2
## 1) input file = manual photic zone binning done by JM and YR
input.file4 <- c("/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/P16NS/Source_Files/P16NS_Extra_Files/20221028_P16NS_Euphotic_Zone_Manual_Binning_Done_YR.csv")
photic <- read.csv(input.file4)
## 2) Add photic zone by matching with original DNA_ID
p16ns.metadata$Photic.Zone <- photic$Zone[match(p16ns.metadata$Original_DNA_ID,
photic$DNA_ID)]
## 3) Count how many samples don't have a photic designation
sum(is.na(p16ns.metadata$Photic.Zone)) ## 9 samples
## 4) For samples from P16N-S47, you need a separate matching DNA_ID
photic$DNA_ID2 <- gsub("(^P16N-S47-N[0-9]{2}).*", "\\1", photic$DNA_ID)
## 5) Add photic bin for these P16N-S47 samples
p16ns.metadata$Photic.Zone <- ifelse(is.na(p16ns.metadata$Photic.Zone),
photic$Zone[match(
p16ns.metadata$Original_DNA_ID,
photic$DNA_ID2)],
p16ns.metadata$Photic.Zone)
sum(is.na(p16ns.metadata$Photic.Zone)) ## 3 samples left
## 6) Manually remove these 3 samples since all 3 were confirmed with JM to
## have insufficient sequencing coverage (< 5,000 reads/sample) and are
## excluded from out dataset
p16ns.metadata$Original_DNA_ID[is.na(p16ns.metadata$Photic.Zone)]
samples.exclude <- c("P16N-S26-N08","P16N-S40-N01","P16N-S61-N06")
p16ns.final <- p16ns.metadata[!p16ns.metadata$Original_DNA_ID
%in% samples.exclude,]
sum(is.na(p16ns.final$Photic.Zone)) ## 0 samples left
## 7) input file = [DNA]
input.file5 <- c("/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/P16NS/Source_Files/P16NS_Extra_Files/221116_P16N-S_DNA_concentrations_for_CMAP.tsv")
dna.con <- read.csv(input.file5, sep = "\t", header = T)
## 8) Add [DNA] column matching to original DNA_ID
p16ns.final$DNA.concentration.ng.uL <- dna.con$DNA.extract.concentration..ng.µL.[
match(p16ns.final$Original_DNA_ID, dna.con$Original_SampleID)]
## 9) Add SW depth based on oce package function using pressure (dbar)
## and latitude (degN = decimal degrees with positive in N hemisphere)
library(oce)
p16ns.final$Depth <- swDepth(pressure = p16ns.final$Pressure,
latitude = p16ns.final$Latitude)
View(p16ns.final)
## 10) Save output file
output.file <- c("/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/P16NS/Data/0.P16NS_Raw_Data/")
setwd(output.file)
p16ns.final2 <- p16ns.final[,-c("Original_DNA_ID")]
p16ns.final2 <- p16ns.final[,!c("Original_DNA_ID")]
View(p16ns.final)
p16ns.final2 <- p16ns.final[,c(1,3:20)]
View(p16ns.final2)
colnames(p16ns.final2$Corrected_DNA_ID) <- "DNA_ID"
colnames(p16ns.final2)[1] <- "DNA_ID"
View(p16ns.final2)
write.csv(p16ns.final2, file = "2.20230530_P16NS_Sample_Metadata_Final.csv", row.names = F)
colnames(p16ns.final2)
View(p16ns.final2)
tm.raw.cols
reg.raw.cols
## 11) Change colnames to include units
colnames(p16ns.final2) <- c("DNA_ID","Cast_Type","Cruise","Station","Niskin",
"Latitude.degrees.North", "Longitude.degrees.East",
"Date.yyyy.mm.dd", "Pressure.decibars",
"Temperature.degrees.Celsius", "Salinity.psu",
"Oxygen.umol.kg", "Phosphate.umol.kg", "Silicate.umol.kg",
"Nitrate.umol.kg", "Nitrite.umol.kg", "Photic.Zone",
"DNA.concentration.ng.uL","Depth.meters")
View(p16ns.final2)
## 12) Save output file
output.file <- c("/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/P16NS/Data/0.P16NS_Raw_Data/")
setwd(output.file)
write.csv(p16ns.final2, file = "2.20230530_P16NS_Sample_Metadata_Final.csv", row.names = F)
