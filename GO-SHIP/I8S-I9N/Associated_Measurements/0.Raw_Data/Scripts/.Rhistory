## with units merged onto the column headers.
input.file4 <- c("/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/I8S_I9N/Data/0.Raw_Data/CSV/20221217_I9N_TM_Cast_Modified_YR.csv")
tm.i9.raw <- read.csv(input.file4)
## 16) Subset only the stations used for our samples
tm.i9.relevant <- tm.i9.raw[tm.i9.raw$STNNBR %in%
df.raw$STATION[df.raw$CRUISE=="I9N"],]
## 17) Since there are no niskin numbers provided in the TM cast data, add niskin numbers
## counting sequentially from x (e.g., 12) to y (e.g., 1) assuming niskin x is the shallowest
## depth and x is the deepest depth at each station
tm.i9.relevant <- tm.i9.relevant %>% group_by(STNNBR) %>%
mutate(Niskin_Assumed = rev(seq_along(STNNBR)))
## 18) Concatenate Cruise, Station, and Niskin analogous columns to produce DNA_ID
tm.i9.relevant$Cruise <- "I9N"
## Station - make sure to add leading zeroes so it's two digits
## so it matches existing DNA_ID
tm.i9.relevant$Station <- paste("S",sprintf("%02d", tm.i9.relevant$STNNBR), sep = "")
## Niskin - have to use the assumed niskin number and cross verify later with depth
tm.i9.relevant$Niskin <- paste("N",sprintf("%02d",tm.i9.relevant$Niskin_Assumed), sep = "")
## Concatenate
tm.i9.relevant$DNA_ID <- paste(tm.i9.relevant$Cruise, tm.i9.relevant$Station,
tm.i9.relevant$Niskin, sep = "-")
## 19) Check calculated SW depth from reported CTD pressures provided by Carlson lab
## against the depth provided in raw TM casts for I9N
tm.i9.relevant$Depth_crosscheck <- df.raw$Depth[match(tm.i9.relevant$DNA_ID,
df.raw$DNA_ID)]
tm.i9.relevant$Pressure_crosscheck <- df.raw$CTDPRS..DBAR.[match(tm.i9.relevant$DNA_ID,
df.raw$DNA_ID)]
## 20) Plot to see how close the reported pressures by Carlson lab are to the depth reported
## in the TM cast data using assumed niskin numbers
ggplot()+
geom_point(data = tm.i9.relevant, aes(x = DEPTH_m, y = Depth_crosscheck, color = "Depth"))+
geom_point(data = tm.i9.relevant, aes(x = DEPTH_m, y = Pressure_crosscheck,
color = "Pressure"))
## 21) Not fully convinced that the "Depth" reported in the TM cast is actually depth since
## that value is extremely close to the reported "CTDPRS..DBAR." from Carlson lab but it's
## fair to assume the DNA_ID using assumed niskin numbers are correct so subset I9N TM using
## the DNA_ID.
i9n.tm <- tm.i9.relevant[tm.i9.relevant$DNA_ID %in%
df.raw$DNA_ID[df.raw$CRUISE=="I9N"],]
i9n.tm$Pressure_crosscheck-i9n.tm$DEPTH_m
View(i9n.tm)
## Discuss with JM and finalize what the true depth (m) to provide as metadata. Since depth
## is never measure with CTD and later calculated, I doubt that the raw TM data is actually
## reporting depth. Thus, I believe their DEPTH column should be CTD.PRS.dBar and
## we should calculate the depth using OCE package based on this actual reported pressure.
i9n.tm$Actual_Depth <- swDepth(pressure = i9n.tm$DEPTH_m,
latitude = i9n.tm$LATITUDE)
## 22) Subset only the following relevant columns and homogenize the column names
## before merging into sample metadata table for downstream use.
temp <- i8s.tm[,c("DNA_ID","Cruise","Station","Niskin", "LATITUDE", "LONGITUDE",
"DEPTH", "Pressure_crosscheck","Actual_Depth")]
colnames(temp) <- c("DNA_ID","Cruise","Station","Niskin", "Latitude", "Longitude",
"Depth_or_Pressure", "Carlson_Pressure","Depth_calculated")
temp2 <- i8s.r[,c("DNA_ID","Cruise","Station","Niskin", "LATITUDE", "LONGITUDE",
"CTDPRS_dbar", "Pressure_crosscheck","Actual_Depth")]
colnames(temp2) <- c("DNA_ID","Cruise","Station","Niskin", "Latitude", "Longitude",
"Depth_or_Pressure", "Carlson_Pressure","Depth_calculated")
temp3 <- i9n.tm[,c("DNA_ID","Cruise","Station","Niskin", "LATITUDE", "LONGITUDE",
"DEPTH_m", "Pressure_crosscheck","Actual_Depth")]
colnames(temp3) <- c("DNA_ID","Cruise","Station","Niskin", "Latitude", "Longitude",
"Depth_or_Pressure", "Carlson_Pressure","Depth_calculated")
i8s.i9n.final <- rbind(temp, temp2, temp3)
View(i8s.i9n.final)
View(i8s.i9n.final)
View(df.raw)
i8s.i9n.final$test <- paste(i8s.i9n.final$Cruise, i8s.i9n.final$Station)
unique(i8s.i9n.final$test)
## 2022-12-17: G1 - confirm DNA ID provided by Carlson lab matches the DNA ID found in final
## ASV table outputs from JM.
## G2 - match CTD metadata for each sample based on DNA ID.
## ******* All raw CTD and bottle data for I08S were downloaded from
## https://cchdo.ucsd.edu/cruise/33RR20070204 *******
## ******* All raw CTD and bottle data for I09N were downloaded from
## https://cchdo.ucsd.edu/cruise/33RR20070322 *******
library(dplyr)
library(oce)
library(ggplot2)
## G1
## 1) Input files = .csv version of "I8I9_2007" tab
## from the "CLIVAR_DNALOG_CARLSON2019_with_DNA_ids" file from JM
input.file1 <- "/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/I8S_I9N/Data/0.Raw_Data/CSV/20221217_I8S_I9N_Raw_DNA_ID.csv"
df.raw <- read.csv(input.file1)
unique(df.raw$CAST.TYPE[df.raw$CRUISE=="I8S"])
unique(df.raw$CAST.TYPE[df.raw$CRUISE=="I9N"])
## Per the cast type summary, I8S samples are combination of trace metal and regular casts ("R")
## while I9N samples are all trace metal casts
## 2) Check the range of niskin numbers for I8S and I9N
## I8S TM casts niskins range from 1 - 12: checks out
range(df.raw$NISKIN[df.raw$CRUISE=="I8S"&df.raw$CAST.TYPE=="TRACE METAL"])
## I8S R casts niskins range from 23 - 35: makes sense since TM casts don't go beyond 12
range(df.raw$NISKIN[df.raw$CRUISE=="I8S"&df.raw$CAST.TYPE=="R"])
## I9N all niskins range from: 1 - 12 confirming that it all came from TM casts
range(df.raw$NISKIN[df.raw$CRUISE=="I9N"])
## 3) I08S raw trace metal data downloaded from
## https://cchdo.ucsd.edu/cruise/33RR20070204 but use modified version
## with units merged onto the column headers. The TM casts lack almost all relevant data.
input.file2 <- "/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/I8S_I9N/Data/0.Raw_Data/CSV/20221217_I8S_TM_Cast_Modified_YR.csv"
tm.i8.raw <- read.csv(input.file2)
## 4) Subset only the stations used for our samples
tm.i8.relevant <- tm.i8.raw[tm.i8.raw$STNNBR %in%
df.raw$STATION[df.raw$CRUISE=="I8S"&
df.raw$CAST.TYPE=="TRACE METAL"],]
## 5) Since there are no niskin numbers provided in the TM cast data, add niskin numbers
## counting sequentially from x (e.g., 12) to y (e.g., 1) assuming niskin x is the shallowest
## depth and x is the deepest depth at each station
tm.i8.relevant <- tm.i8.relevant %>% group_by(STNNBR) %>%
mutate(Niskin_Assumed = rev(seq_along(STNNBR)))
## 6) Concatenate Cruise, Station, and Niskin analogous columns to produce DNA_ID
tm.i8.relevant$Cruise <- "I8S"
## Station - make sure to add leading zeroes so it's two digits
## so it matches existing DNA_ID
tm.i8.relevant$Station <- paste("S",sprintf("%02d", tm.i8.relevant$STNNBR), sep = "")
## Niskin - have to use the assumed niskin number and cross verify later with depth
tm.i8.relevant$Niskin <- paste("N",sprintf("%02d",tm.i8.relevant$Niskin_Assumed), sep = "")
## Concatenate
tm.i8.relevant$DNA_ID <- paste(tm.i8.relevant$Cruise, tm.i8.relevant$Station,
tm.i8.relevant$Niskin, sep = "-")
## 7) Add SW depth to raw DNA_ID df based on oce package function using pressure (dbar)
## and latitude (degN = decimal degrees with positive in N hemisphere)
df.raw$Depth <- swDepth(pressure = df.raw$CTDPRS..DBAR.,
latitude = df.raw$Latitude..degrees_north.)
## 8) Check calculated SW depth from reported CTD pressures provided by Carlson lab
## against the depth provided in raw TM casts for I8S
tm.i8.relevant$Depth_crosscheck <- df.raw$Depth[match(tm.i8.relevant$DNA_ID,
df.raw$DNA_ID)]
tm.i8.relevant$Pressure_crosscheck <- df.raw$CTDPRS..DBAR.[match(tm.i8.relevant$DNA_ID,
df.raw$DNA_ID)]
## 9) Plot to see how close the reported pressures by Carlson lab are to the depth reported
## in the TM cast data using assumed niskin numbers
ggplot()+
geom_point(data = tm.i8.relevant, aes(x = DEPTH, y = Depth_crosscheck, color = "Depth"))+
geom_point(data = tm.i8.relevant, aes(x = DEPTH, y = Pressure_crosscheck,
color = "Pressure"))
## 10) Not fully convinced that the "Depth" reported in the TM cast is actually depth since
## that value is extremely close to the reported "CTDPRS..DBAR." from Carlson lab but it's
## fair to assume the DNA_ID using assumed niskin numbers are correct so subset I8S TM using
## the DNA_ID.
i8s.tm <- tm.i8.relevant[tm.i8.relevant$DNA_ID %in%
df.raw$DNA_ID[df.raw$CRUISE=="I8S"&
df.raw$CAST.TYPE=="TRACE METAL"],]
i8s.tm$Pressure_crosscheck-i8s.tm$DEPTH
## Discuss with JM and finalize what the true depth (m) to provide as metadata. Since depth
## is never measure with CTD and later calculated, I doubt that the raw TM data is actually
## reporting depth. Thus, I believe their DEPTH column should be CTD.PRS.dBar and
## we should calculate the depth using OCE package based on this actual reported pressure.
i8s.tm$Actual_Depth <- swDepth(pressure = i8s.tm$DEPTH,
latitude = i8s.tm$LATITUDE)
## ** Major issue with I8S TM casts is that the bottle data from R casts don't match up
## with sampled depths so we won't have all metadata. We could at least get CTD Temperature
## and salinity by matching closest pressure to CTD profile but that's also not the most
## complete dataset. **
## 11) input file = I08S raw regular (R) cast Bottle data downloaded from
## https://cchdo.ucsd.edu/cruise/33RR20070204 but use modified version
## with units merged onto the column headers.
input.file3 <- c("/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/I8S_I9N/Data/0.Raw_Data/CSV/20221217_I8S_R_Cast_Modified_YR.csv")
r.i8.raw <- read.csv(input.file3)
## 12) Subset only the stations used for our samples
r.i8.relevant <- r.i8.raw[r.i8.raw$STNNBR %in%
df.raw$STATION[df.raw$CRUISE=="I8S"&
df.raw$CAST.TYPE=="R"],]
## 13) Concatenate Cruise, Station, and Niskin analogous columns to produce DNA_ID
## Cruise - manually input I8S
r.i8.relevant$Cruise <- "I8S"
## Station - make sure to add leading zeroes so it's two digits
## so it matches existing DNA_ID
r.i8.relevant$Station <- paste("S",sprintf("%02d", r.i8.relevant$STNNBR), sep = "")
## Niskin - assuming analogous column in regular CTD cast is "SAMPNO" b/c "BTLNBR" looks funky
r.i8.relevant$Niskin <- paste("N",sprintf("%02d",r.i8.relevant$SAMPNO), sep = "")
## Concatenate
r.i8.relevant$DNA_ID <- paste(r.i8.relevant$Cruise, r.i8.relevant$Station,
r.i8.relevant$Niskin, sep = "-")
## 14) Subset I8S R using the DNA_ID.
i8s.r <- r.i8.relevant[r.i8.relevant$DNA_ID %in%
df.raw$DNA_ID[df.raw$CRUISE=="I8S"&
df.raw$CAST.TYPE=="R"],]
i8s.r$Pressure_crosscheck <- df.raw$CTDPRS..DBAR.[match(i8s.r$DNA_ID,
df.raw$DNA_ID)]
i8s.r$Actual_Depth <- swDepth(pressure = i8s.r$CTDPRS_dbar,
latitude = i8s.r$LATITUDE)
## 15) input file = I09N raw TM cast data downloaded from
## https://cchdo.ucsd.edu/cruise/33RR20070322 but use modified version
## with units merged onto the column headers.
input.file4 <- c("/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/I8S_I9N/Data/0.Raw_Data/CSV/20221217_I9N_TM_Cast_Modified_YR.csv")
tm.i9.raw <- read.csv(input.file4)
## 16) Subset only the stations used for our samples
tm.i9.relevant <- tm.i9.raw[tm.i9.raw$STNNBR %in%
df.raw$STATION[df.raw$CRUISE=="I9N"],]
## 17) Since there are no niskin numbers provided in the TM cast data, add niskin numbers
## counting sequentially from x (e.g., 12) to y (e.g., 1) assuming niskin x is the shallowest
## depth and x is the deepest depth at each station
tm.i9.relevant <- tm.i9.relevant %>% group_by(STNNBR) %>%
mutate(Niskin_Assumed = rev(seq_along(STNNBR)))
## 18) Concatenate Cruise, Station, and Niskin analogous columns to produce DNA_ID
tm.i9.relevant$Cruise <- "I9N"
## Station - make sure to add leading zeroes so it's two digits
## so it matches existing DNA_ID
tm.i9.relevant$Station <- paste("S",sprintf("%02d", tm.i9.relevant$STNNBR), sep = "")
## Niskin - have to use the assumed niskin number and cross verify later with depth
tm.i9.relevant$Niskin <- paste("N",sprintf("%02d",tm.i9.relevant$Niskin_Assumed), sep = "")
## Concatenate
tm.i9.relevant$DNA_ID <- paste(tm.i9.relevant$Cruise, tm.i9.relevant$Station,
tm.i9.relevant$Niskin, sep = "-")
## 19) Check calculated SW depth from reported CTD pressures provided by Carlson lab
## against the depth provided in raw TM casts for I9N
tm.i9.relevant$Depth_crosscheck <- df.raw$Depth[match(tm.i9.relevant$DNA_ID,
df.raw$DNA_ID)]
tm.i9.relevant$Pressure_crosscheck <- df.raw$CTDPRS..DBAR.[match(tm.i9.relevant$DNA_ID,
df.raw$DNA_ID)]
## 20) Plot to see how close the reported pressures by Carlson lab are to the depth reported
## in the TM cast data using assumed niskin numbers
ggplot()+
geom_point(data = tm.i9.relevant, aes(x = DEPTH_m, y = Depth_crosscheck, color = "Depth"))+
geom_point(data = tm.i9.relevant, aes(x = DEPTH_m, y = Pressure_crosscheck,
color = "Pressure"))
## 21) Not fully convinced that the "Depth" reported in the TM cast is actually depth since
## that value is extremely close to the reported "CTDPRS..DBAR." from Carlson lab but it's
## fair to assume the DNA_ID using assumed niskin numbers are correct so subset I9N TM using
## the DNA_ID.
i9n.tm <- tm.i9.relevant[tm.i9.relevant$DNA_ID %in%
df.raw$DNA_ID[df.raw$CRUISE=="I9N"],]
i9n.tm$Pressure_crosscheck-i9n.tm$DEPTH_m
## Discuss with JM and finalize what the true depth (m) to provide as metadata. Since depth
## is never measure with CTD and later calculated, I doubt that the raw TM data is actually
## reporting depth. Thus, I believe their DEPTH column should be CTD.PRS.dBar and
## we should calculate the depth using OCE package based on this actual reported pressure.
i9n.tm$Actual_Depth <- swDepth(pressure = i9n.tm$DEPTH_m,
latitude = i9n.tm$LATITUDE)
## ** Major issue with I9N TM casts is that the bottle data from R casts don't match up
## with sampled depths so we won't have all metadata. We could at least get CTD Temperature
## and salinity by matching closest pressure to CTD profile but that's also not the most
## complete dataset. **
## 22) Subset only the following relevant columns and homogenize the column names
## before merging into sample metadata table for downstream use.
temp <- i8s.tm[,c("DNA_ID","Cruise","Station","Niskin", "LATITUDE", "LONGITUDE",
"DEPTH", "Pressure_crosscheck","Actual_Depth")]
colnames(temp) <- c("DNA_ID","Cruise","Station","Niskin", "Latitude", "Longitude",
"Depth_or_Pressure", "Carlson_Pressure","Depth_calculated")
temp2 <- i8s.r[,c("DNA_ID","Cruise","Station","Niskin", "LATITUDE", "LONGITUDE",
"CTDPRS_dbar", "Pressure_crosscheck","Actual_Depth")]
colnames(temp2) <- c("DNA_ID","Cruise","Station","Niskin", "Latitude", "Longitude",
"Depth_or_Pressure", "Carlson_Pressure","Depth_calculated")
temp3 <- i9n.tm[,c("DNA_ID","Cruise","Station","Niskin", "LATITUDE", "LONGITUDE",
"DEPTH_m", "Pressure_crosscheck","Actual_Depth")]
colnames(temp3) <- c("DNA_ID","Cruise","Station","Niskin", "Latitude", "Longitude",
"Depth_or_Pressure", "Carlson_Pressure","Depth_calculated")
i8s.i9n.final <- rbind(temp, temp2, temp3)
save.df <- i8s.i9n.final[,c("DNA_ID","Cruise","Station","Niskin", "Latitude", "Longitude",
"Depth_or_Pressure", "Depth_calculated")]
colnames(save.df) <- c("DNA_ID","Cruise","Station","Niskin", "Latitude", "Longitude",
"CTD_Pressure", "Depth_m")
## G1
## 1) Input files = .csv version of "I8I9_2007" tab
## from the "CLIVAR_DNALOG_CARLSON2019_with_DNA_ids" file from JM
input.file1 <- "/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/I8S_I9N/Data/0.Raw_Data/CSV/20221217_I8S_I9N_Raw_DNA_ID.csv"
df.raw <- read.csv(input.file1)
unique(df.raw$CAST.TYPE[df.raw$CRUISE=="I8S"])
unique(df.raw$CAST.TYPE[df.raw$CRUISE=="I9N"])
## Per the cast type summary, I8S samples are combination of trace metal and regular casts ("R")
## while I9N samples are all trace metal casts
## 2) Check the range of niskin numbers for I8S and I9N
## I8S TM casts niskins range from 1 - 12: checks out
range(df.raw$NISKIN[df.raw$CRUISE=="I8S"&df.raw$CAST.TYPE=="TRACE METAL"])
## I8S R casts niskins range from 23 - 35: makes sense since TM casts don't go beyond 12
range(df.raw$NISKIN[df.raw$CRUISE=="I8S"&df.raw$CAST.TYPE=="R"])
## I9N all niskins range from: 1 - 12 confirming that it all came from TM casts
range(df.raw$NISKIN[df.raw$CRUISE=="I9N"])
## 3) I08S raw trace metal data downloaded from
## https://cchdo.ucsd.edu/cruise/33RR20070204 but use modified version
## with units merged onto the column headers. The TM casts lack almost all relevant data.
input.file2 <- "/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/I8S_I9N/Data/0.Raw_Data/CSV/20221217_I8S_TM_Cast_Modified_YR.csv"
tm.i8.raw <- read.csv(input.file2)
## 4) Subset only the stations used for our samples
tm.i8.relevant <- tm.i8.raw[tm.i8.raw$STNNBR %in%
df.raw$STATION[df.raw$CRUISE=="I8S"&
df.raw$CAST.TYPE=="TRACE METAL"],]
## 5) Since there are no niskin numbers provided in the TM cast data, add niskin numbers
## counting sequentially from x (e.g., 12) to y (e.g., 1) assuming niskin x is the shallowest
## depth and x is the deepest depth at each station
tm.i8.relevant <- tm.i8.relevant %>% group_by(STNNBR) %>%
mutate(Niskin_Assumed = rev(seq_along(STNNBR)))
## 6) Concatenate Cruise, Station, and Niskin analogous columns to produce DNA_ID
tm.i8.relevant$Cruise <- "I8S"
## Station - make sure to add leading zeroes so it's two digits
## so it matches existing DNA_ID
tm.i8.relevant$Station <- paste("S",sprintf("%02d", tm.i8.relevant$STNNBR), sep = "")
## Niskin - have to use the assumed niskin number and cross verify later with depth
tm.i8.relevant$Niskin <- paste("N",sprintf("%02d",tm.i8.relevant$Niskin_Assumed), sep = "")
## Concatenate
tm.i8.relevant$DNA_ID <- paste(tm.i8.relevant$Cruise, tm.i8.relevant$Station,
tm.i8.relevant$Niskin, sep = "-")
## 7) Add SW depth to raw DNA_ID df based on oce package function using pressure (dbar)
## and latitude (degN = decimal degrees with positive in N hemisphere)
df.raw$Depth <- swDepth(pressure = df.raw$CTDPRS..DBAR.,
latitude = df.raw$Latitude..degrees_north.)
## 8) Check calculated SW depth from reported CTD pressures provided by Carlson lab
## against the depth provided in raw TM casts for I8S
tm.i8.relevant$Depth_crosscheck <- df.raw$Depth[match(tm.i8.relevant$DNA_ID,
df.raw$DNA_ID)]
tm.i8.relevant$Pressure_crosscheck <- df.raw$CTDPRS..DBAR.[match(tm.i8.relevant$DNA_ID,
df.raw$DNA_ID)]
## 9) Plot to see how close the reported pressures by Carlson lab are to the depth reported
## in the TM cast data using assumed niskin numbers
ggplot()+
geom_point(data = tm.i8.relevant, aes(x = DEPTH, y = Depth_crosscheck, color = "Depth"))+
geom_point(data = tm.i8.relevant, aes(x = DEPTH, y = Pressure_crosscheck,
color = "Pressure"))
## 10) Not fully convinced that the "Depth" reported in the TM cast is actually depth since
## that value is extremely close to the reported "CTDPRS..DBAR." from Carlson lab but it's
## fair to assume the DNA_ID using assumed niskin numbers are correct so subset I8S TM using
## the DNA_ID.
i8s.tm <- tm.i8.relevant[tm.i8.relevant$DNA_ID %in%
df.raw$DNA_ID[df.raw$CRUISE=="I8S"&
df.raw$CAST.TYPE=="TRACE METAL"],]
i8s.tm$Pressure_crosscheck-i8s.tm$DEPTH
## Discuss with JM and finalize what the true depth (m) to provide as metadata. Since depth
## is never measure with CTD and later calculated, I doubt that the raw TM data is actually
## reporting depth. Thus, I believe their DEPTH column should be CTD.PRS.dBar and
## we should calculate the depth using OCE package based on this actual reported pressure.
i8s.tm$Actual_Depth <- swDepth(pressure = i8s.tm$DEPTH,
latitude = i8s.tm$LATITUDE)
## 11) input file = I08S raw regular (R) cast Bottle data downloaded from
## https://cchdo.ucsd.edu/cruise/33RR20070204 but use modified version
## with units merged onto the column headers.
input.file3 <- c("/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/I8S_I9N/Data/0.Raw_Data/CSV/20221217_I8S_R_Cast_Modified_YR.csv")
r.i8.raw <- read.csv(input.file3)
## 12) Subset only the stations used for our samples
r.i8.relevant <- r.i8.raw[r.i8.raw$STNNBR %in%
df.raw$STATION[df.raw$CRUISE=="I8S"&
df.raw$CAST.TYPE=="R"],]
## 13) Concatenate Cruise, Station, and Niskin analogous columns to produce DNA_ID
## Cruise - manually input I8S
r.i8.relevant$Cruise <- "I8S"
## Station - make sure to add leading zeroes so it's two digits
## so it matches existing DNA_ID
r.i8.relevant$Station <- paste("S",sprintf("%02d", r.i8.relevant$STNNBR), sep = "")
## Niskin - assuming analogous column in regular CTD cast is "SAMPNO" b/c "BTLNBR" looks funky
r.i8.relevant$Niskin <- paste("N",sprintf("%02d",r.i8.relevant$SAMPNO), sep = "")
## Concatenate
r.i8.relevant$DNA_ID <- paste(r.i8.relevant$Cruise, r.i8.relevant$Station,
r.i8.relevant$Niskin, sep = "-")
## 14) Subset I8S R using the DNA_ID.
i8s.r <- r.i8.relevant[r.i8.relevant$DNA_ID %in%
df.raw$DNA_ID[df.raw$CRUISE=="I8S"&
df.raw$CAST.TYPE=="R"],]
i8s.r$Pressure_crosscheck <- df.raw$CTDPRS..DBAR.[match(i8s.r$DNA_ID,
df.raw$DNA_ID)]
i8s.r$Actual_Depth <- swDepth(pressure = i8s.r$CTDPRS_dbar,
latitude = i8s.r$LATITUDE)
## 15) input file = I09N raw TM cast data downloaded from
## https://cchdo.ucsd.edu/cruise/33RR20070322 but use modified version
## with units merged onto the column headers.
input.file4 <- c("/Users/yubinraut/Documents/Fuhrman_Lab/CBIOMES_Biogeography/I8S_I9N/Data/0.Raw_Data/CSV/20221217_I9N_TM_Cast_Modified_YR.csv")
tm.i9.raw <- read.csv(input.file4)
## 16) Subset only the stations used for our samples
tm.i9.relevant <- tm.i9.raw[tm.i9.raw$STNNBR %in%
df.raw$STATION[df.raw$CRUISE=="I9N"],]
View(df.raw)
View(i8s.r)
## 17) Since there are no niskin numbers provided in the TM cast data, add niskin numbers
## counting sequentially from x (e.g., 12) to y (e.g., 1) assuming niskin x is the shallowest
## depth and x is the deepest depth at each station
tm.i9.relevant <- tm.i9.relevant %>% group_by(STNNBR) %>%
mutate(Niskin_Assumed = rev(seq_along(STNNBR)))
## 18) Concatenate Cruise, Station, and Niskin analogous columns to produce DNA_ID
tm.i9.relevant$Cruise <- "I9N"
## Station - make sure to add leading zeroes so it's two digits
## so it matches existing DNA_ID
tm.i9.relevant$Station <- paste("S",sprintf("%02d", tm.i9.relevant$STNNBR), sep = "")
## Niskin - have to use the assumed niskin number and cross verify later with depth
tm.i9.relevant$Niskin <- paste("N",sprintf("%02d",tm.i9.relevant$Niskin_Assumed), sep = "")
## Concatenate
tm.i9.relevant$DNA_ID <- paste(tm.i9.relevant$Cruise, tm.i9.relevant$Station,
tm.i9.relevant$Niskin, sep = "-")
## 19) Check calculated SW depth from reported CTD pressures provided by Carlson lab
## against the depth provided in raw TM casts for I9N
tm.i9.relevant$Depth_crosscheck <- df.raw$Depth[match(tm.i9.relevant$DNA_ID,
df.raw$DNA_ID)]
tm.i9.relevant$Pressure_crosscheck <- df.raw$CTDPRS..DBAR.[match(tm.i9.relevant$DNA_ID,
df.raw$DNA_ID)]
## 20) Plot to see how close the reported pressures by Carlson lab are to the depth reported
## in the TM cast data using assumed niskin numbers
ggplot()+
geom_point(data = tm.i9.relevant, aes(x = DEPTH_m, y = Depth_crosscheck, color = "Depth"))+
geom_point(data = tm.i9.relevant, aes(x = DEPTH_m, y = Pressure_crosscheck,
color = "Pressure"))
## 21) Not fully convinced that the "Depth" reported in the TM cast is actually depth since
## that value is extremely close to the reported "CTDPRS..DBAR." from Carlson lab but it's
## fair to assume the DNA_ID using assumed niskin numbers are correct so subset I9N TM using
## the DNA_ID.
i9n.tm <- tm.i9.relevant[tm.i9.relevant$DNA_ID %in%
df.raw$DNA_ID[df.raw$CRUISE=="I9N"],]
i9n.tm$Pressure_crosscheck-i9n.tm$DEPTH_m
## Discuss with JM and finalize what the true depth (m) to provide as metadata. Since depth
## is never measure with CTD and later calculated, I doubt that the raw TM data is actually
## reporting depth. Thus, I believe their DEPTH column should be CTD.PRS.dBar and
## we should calculate the depth using OCE package based on this actual reported pressure.
i9n.tm$Actual_Depth <- swDepth(pressure = i9n.tm$DEPTH_m,
latitude = i9n.tm$LATITUDE)
## 22) Subset only the following relevant columns and homogenize the column names
## before merging into sample metadata table for downstream use.
temp <- i8s.tm[,c("DNA_ID","Cruise","Station","Niskin", "LATITUDE", "LONGITUDE",
"DEPTH", "Pressure_crosscheck","Actual_Depth")]
colnames(temp) <- c("DNA_ID","Cruise","Station","Niskin", "Latitude", "Longitude",
"Depth_or_Pressure", "Carlson_Pressure","Depth_calculated")
temp2 <- i8s.r[,c("DNA_ID","Cruise","Station","Niskin", "LATITUDE", "LONGITUDE",
"CTDPRS_dbar", "Pressure_crosscheck","Actual_Depth")]
colnames(temp2) <- c("DNA_ID","Cruise","Station","Niskin", "Latitude", "Longitude",
"Depth_or_Pressure", "Carlson_Pressure","Depth_calculated")
temp3 <- i9n.tm[,c("DNA_ID","Cruise","Station","Niskin", "LATITUDE", "LONGITUDE",
"DEPTH_m", "Pressure_crosscheck","Actual_Depth")]
colnames(temp3) <- c("DNA_ID","Cruise","Station","Niskin", "Latitude", "Longitude",
"Depth_or_Pressure", "Carlson_Pressure","Depth_calculated")
View(i8s.tm)
View(i8s.r)
View(i9n.tm)
i8s.i9n.final <- rbind(temp, temp2, temp3)
save.df <- i8s.i9n.final[,c("DNA_ID","Cruise","Station","Niskin", "Latitude", "Longitude",
"Depth_or_Pressure", "Depth_calculated")]
colnames(save.df) <- c("DNA_ID","Cruise","Station","Niskin", "Latitude", "Longitude",
"CTD_Pressure", "Depth_m")
View(save.df)
View(df.raw)
## 22) Subset only the following relevant columns and homogenize the column names
## before merging into sample metadata table for downstream use.
i8s.tm$Cast_type <- "TM"
temp <- i8s.tm[,c("DNA_ID","Cruise","Station","Niskin","Cast_type", "LATITUDE", "LONGITUDE",
"DEPTH", "Pressure_crosscheck","Actual_Depth")]
colnames(temp) <- c("DNA_ID","Cruise","Station","Niskin", "Cast_type","Latitude", "Longitude",
"Depth_or_Pressure", "Carlson_Pressure","Depth_calculated")
## 22) Subset only the following relevant columns and homogenize the column names
## before merging into sample metadata table for downstream use.
i8s.tm$Cast_type <- "Trace Metal"
temp <- i8s.tm[,c("DNA_ID","Cruise","Station","Niskin","Cast_type", "LATITUDE", "LONGITUDE",
"DEPTH", "Pressure_crosscheck","Actual_Depth")]
colnames(temp) <- c("DNA_ID","Cruise","Station","Niskin", "Cast_type","Latitude", "Longitude",
"Depth_or_Pressure", "Carlson_Pressure","Depth_calculated")
i8s.r$Cast_type <- "Regular"
temp2 <- i8s.r[,c("DNA_ID","Cruise","Station","Niskin","Cast_type", "LATITUDE", "LONGITUDE",
"CTDPRS_dbar", "Pressure_crosscheck","Actual_Depth")]
colnames(temp2) <- c("DNA_ID","Cruise","Station","Niskin","Cast_type", "Latitude", "Longitude",
"Depth_or_Pressure", "Carlson_Pressure","Depth_calculated")
i9n.tm$Cast_type <- "Trace Metal"
temp3 <- i9n.tm[,c("DNA_ID","Cruise","Station","Niskin","Cast_type", "LATITUDE", "LONGITUDE",
"DEPTH_m", "Pressure_crosscheck","Actual_Depth")]
colnames(temp3) <- c("DNA_ID","Cruise","Station","Niskin","Cast_type", "Latitude", "Longitude",
"Depth_or_Pressure", "Carlson_Pressure","Depth_calculated")
i8s.i9n.final <- rbind(temp, temp2, temp3)
save.df <- i8s.i9n.final[,c("DNA_ID","Cruise","Station","Niskin","Cast_type", "Latitude", "Longitude",
"Depth_or_Pressure", "Depth_calculated")]
colnames(temp) <- c("DNA_ID","Cruise","Station","Niskin", "Cast_type","Latitude", "Longitude",
"CTD_Pressure", "Carlson_Pressure","Depth_m")
colnames(temp2) <- c("DNA_ID","Cruise","Station","Niskin","Cast_type", "Latitude", "Longitude",
"CTD_Pressure", "Carlson_Pressure","Depth_m")
colnames(temp3) <- c("DNA_ID","Cruise","Station","Niskin","Cast_type", "Latitude", "Longitude",
"CTD_Pressure", "Carlson_Pressure","Depth_m")
save.df <- i8s.i9n.final[,c("DNA_ID","Cruise","Station","Niskin","Cast_type", "Latitude", "Longitude",
"CTD_Pressure", "Depth_m")]
i8s.i9n.final <- rbind(temp, temp2, temp3)
save.df <- i8s.i9n.final[,c("DNA_ID","Cruise","Station","Niskin","Cast_type", "Latitude", "Longitude",
"CTD_Pressure", "Depth_m")]
View(save.df)
str(df.raw)
df.raw$Date <- gsub("[0-9]T.*$", "", df.raw$yyyy.mm.ddThh.mm)
View(df.raw)
save.df$Date_Carlson <- df.raw$Date[match(save.df$DNA_ID, df.raw$DNA_ID)]
View(save.df)
i8s.i9n.final$Date_Carlson <- df.raw$Date[match(i8s.i9n.final$DNA_ID, df.raw$DNA_ID)]
save.df <- i8s.i9n.final[,c("DNA_ID","Cruise","Station","Niskin","Cast_type","Date_Carlson",
"Latitude", "Longitude","CTD_Pressure", "Depth_m")]
save.df <- i8s.i9n.final[,c("DNA_ID","Cruise","Station","Niskin","Cast_type","Date_Carlson",
"Latitude", "Longitude","CTD_Pressure", "Depth_m")]
View(save.df)
View(df.raw)
df.raw$Date <- gsub("[0-9].T*$", "", df.raw$yyyy.mm.ddThh.mm)
View(df.raw)
View(df.raw)
df.raw$Date <- gsub("[0-9]{8}T.*$", "", df.raw$yyyy.mm.ddThh.mm)
View(df.raw)
df.raw$Date <- gsub("[0-9]{8}T.*$", "\\1", df.raw$yyyy.mm.ddThh.mm)
View(df.raw)
df.raw$Date <- gsub(".*T", "", df.raw$yyyy.mm.ddThh.mm)
View(df.raw)
df.raw$Date <- sub("T.*", "", df.raw$yyyy.mm.ddThh.mm)
View(df.raw)
i8s.i9n.final$Date_Carlson <- df.raw$Date[match(i8s.i9n.final$DNA_ID, df.raw$DNA_ID)]
save.df <- i8s.i9n.final[,c("DNA_ID","Cruise","Station","Niskin","Cast_type","Date_Carlson",
"Latitude", "Longitude","CTD_Pressure", "Depth_m")]
View(save.df)
View(df.raw)
View(save.df)
## 24) Round the CTD pressures to the nearest even integer to match with CTD casts
## which only have increments of 2 dBar
i8s.i9n.final$Depth_even <- 2 * round(i8s.i9n.final$Depth_m/2)
View(i8s.i9n.final)
i8s.i9n.final <- rbind(temp, temp2, temp3)
## 23) Add the dates provided by Carlson lab
df.raw$Date <- sub("T.*", "", df.raw$yyyy.mm.ddThh.mm)
i8s.i9n.final$Date_Carlson <- df.raw$Date[match(i8s.i9n.final$DNA_ID, df.raw$DNA_ID)]
## 24) Round the CTD pressures to the nearest even integer to match with CTD casts
## which only have increments of 2 dBar
i8s.i9n.final$Pressure_even <- 2 * round(i8s.i9n.final$CTD_Pressure/2)
View(i8s.i9n.final)
i8s.i9n.final$Cruis_Station <- paste(i8s.i9n.final$Cruise, i8s.i9n.final$Station, sep = "-")
input.file5 <- "merged CTD cast"
i8s.i9n.final <- rbind(temp, temp2, temp3)
## 23) Add the dates provided by Carlson lab
df.raw$Date <- sub("T.*", "", df.raw$yyyy.mm.ddThh.mm)
i8s.i9n.final$Date_Carlson <- df.raw$Date[match(i8s.i9n.final$DNA_ID, df.raw$DNA_ID)]
## 24) Round the CTD pressures to the nearest even integer to match with CTD casts
## which only have increments of 2 dBar
i8s.i9n.final$Pressure_even <- 2 * round(i8s.i9n.final$CTD_Pressure/2)
i8s.i9n.final$Cruise_Station <- paste(i8s.i9n.final$Cruise, i8s.i9n.final$Station, sep = "-")
